name: Check_consulTemplate_Version

on:
  # schedule:
    # * is a special character in YAML so you have to quote this string
    # - cron:  '15 5 * * 1' # min hour day month dow
  workflow_dispatch:

permissions: {}

jobs:
  version:
    name: check
    runs-on: ubuntu-latest
    steps:
      - name: get versions
        id: versions
        continue-on-error: true
        run: |
          local=$(curl  "https://api.github.com/repos/evva-sfw/consul-template_chainguard_image/tags" | jq -r '.[0].name')
          consulTemplate=$(curl  "https://api.github.com/repos/hashicorp/consul-template/tags" | jq -r '.[0].name')
          # Strip the "v" from version string
          consulTemplate="${consulTemplate:1}"
          echo "local=$local" >> "$GITHUB_OUTPUT"
          echo "consulTemplate=$consulTemplate" >> "$GITHUB_OUTPUT"
          $(dpkg --compare-versions "$local" lt "$consulTemplate") # This exits with non 0 if it is not true
          # get exit code from previous cmd
          newVersionAvailable=$?
          # invert: so 1 = new version and 0 = no new version
          ((newVersionAvailable ^= 1))
          echo "newVersionAvailable=$newVersionAvailable" >> "$GITHUB_OUTPUT"
      - name: New version available
        if: ${{ steps.versions.outputs.newVersionAvailable == 1 }}
        run: |
          echo "new version available ${{ steps.versions.outputs.newVersionAvailable }} ${{ steps.versions.outputs.local }} < ${{ steps.versions.outputs.consulTemplate }}"
          echo "VERSION=${{ steps.versions.outputs.consulTemplate }}" > version.txt
      - name: Upload Artifact
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        if: ${{ steps.versions.outputs.newVersionAvailable == 1 }}
        with:
          name: version
          path: version.txt
      - name: No new version available
        if: ${{ steps.versions.outputs.newVersionAvailable != 1 }}
        run: |
          echo "No new version available ${{ steps.versions.outputs.newVersionAvailable }} ${{ steps.versions.outputs.local }} >= ${{ steps.versions.outputs.consulTemplate }}"
          exit 1 # This has to fail so the triggered docker workflow can check the conclusion of this one https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#running-a-workflow-based-on-the-conclusion-of-another-workflow
